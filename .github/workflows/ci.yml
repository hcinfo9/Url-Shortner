name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: docker123
          POSTGRES_PASSWORD: docker123
          POSTGRES_DB: databaseurl

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - run: npm install
    - run: npm run lint
    - run: npm run test

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/url-shortener:latest .
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/url-shortener:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.18.0'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f postgres-pv.yaml
        kubectl apply -f postgres-pvc.yaml
        kubectl apply -f db-service.yaml
        kubectl apply -f db-deployment.yaml
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl apply -f krakend-config.yaml

    - name: Run Prisma Migrations
      run: |
        kubectl rollout status deployment/url-shortener
        kubectl exec -it $(kubectl get pod -l app=url-shortener -o jsonpath="{.items[0].metadata.name}") -- npx prisma generate
        kubectl exec -it $(kubectl get pod -l app=url-shortener -o jsonpath="{.items[0].metadata.name}") -- npx prisma migrate deploy
